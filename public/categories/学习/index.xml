<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>学习 on 冷嘉承</title>
    <link>/categories/%E5%AD%A6%E4%B9%A0/</link>
    <description>Recent content in 学习 on 冷嘉承</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="/categories/%E5%AD%A6%E4%B9%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>python快速求解矩阵最小（大）特征值</title>
      <link>/post/2021/06/05/python%E5%BF%AB%E9%80%9F%E6%B1%82%E8%A7%A3%E7%9F%A9%E9%98%B5%E6%9C%80%E5%B0%8F-%E5%A4%A7-%E7%89%B9%E5%BE%81%E5%80%BC/</link>
      <pubDate>Sat, 05 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021/06/05/python%E5%BF%AB%E9%80%9F%E6%B1%82%E8%A7%A3%E7%9F%A9%E9%98%B5%E6%9C%80%E5%B0%8F-%E5%A4%A7-%E7%89%B9%E5%BE%81%E5%80%BC/</guid>
      <description>from generate_data import *from scipy.sparse.linalg import eigshfrom numpy.linalg import eighfrom time import time# 生成一个实对称矩阵theta1 = generate_theta1(500,&amp;#39;BA&amp;#39;,0.1)time1 = time()for i in range(20):# &amp;#39;SA&amp;#39; small algebra eigenvalueseigsh(theta1,which=&amp;#39;SA&amp;#39;,return_eigenvectors=False,k=1)time2 = time()print(time2-time1)time1 = time()for i in range(20):min(eigh(theta1)[0])time2 = time()print(time2-time1)Output:
0.157297134399414060.6559879779815674</description>
    </item>
    
    <item>
      <title>Rstudio更改光标颜色</title>
      <link>/post/2020/11/28/rstudio%E6%9B%B4%E6%94%B9%E5%85%89%E6%A0%87%E9%A2%9C%E8%89%B2/</link>
      <pubDate>Sat, 28 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/11/28/rstudio%E6%9B%B4%E6%94%B9%E5%85%89%E6%A0%87%E9%A2%9C%E8%89%B2/</guid>
      <description>打开
Yourpath2Rstudio\RStudio\resources\themes\yourtheme.rstheme
更改以下代码的颜色部分即可。
.ace_cursor,.ace_string.ace_regexp {color: #f5999c #光标颜色}虽然格式是.rstheme,但是是用css的编码方式编写的。</description>
    </item>
    
    <item>
      <title>Automation of Cytoscape using R</title>
      <link>/post/2020/11/20/automation-of-cytoscape-using-r/</link>
      <pubDate>Fri, 20 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/11/20/automation-of-cytoscape-using-r/</guid>
      <description>Preface经过我的一番摸索，终于搞明白了，这个R包本身说明并不详细，具体参数基本全靠猜，当然我还参考了Cytoscape automation in R using Rcy3(仅仅参考了一行代码)，累死我了- -！
1. 安装R包“RCy3”if (!requireNamespace(&amp;quot;BiocManager&amp;quot;, quietly = TRUE))install.packages(&amp;quot;BiocManager&amp;quot;)BiocManager::install(&amp;quot;RCy3&amp;quot;)2. 调用函数cyrestPOST本文以Cytoscape中的Reactome FI Apps中的“Gene Set/Mutation Analysis”功能生成网络图，并导出为csv文件为例具体讲解自动化(Automation)流程。
废话不多说，直接导入下面代码，并修改相应的path
library(RCy3)filename.input &amp;lt;- &amp;#39;path.of.your.input.file&amp;#39;filename.output &amp;lt;- &amp;#39;path.of.your.output.file&amp;#39;)body.reactome &amp;lt;- list(fiVersion = &amp;#39;2019&amp;#39;, # Reactome FI Networks Version, 不同版本结果不同format = &amp;#39;GeneSet&amp;#39;, # Specify formatfile = filename.input, # 对应的是GUI中的 Choose data file：enteredGenes = &amp;#39;null&amp;#39;, # 对应的是GUI中的 Or enter gene set：chooseHomoGenes = FALSE,useLinkers = FALSE, # 对应的是GUI中的 Use linker genes：showUnlinked = FALSE, # 对应的是GUI中的 Show genes not linked to others：fetchFIAnnotations = TRUE, # 对应的是GUI中的 Fetch FI annotations：sampleCutoffValue = &amp;#39;4&amp;#39;)body.</description>
    </item>
    
    <item>
      <title>利用TCGA的mRNA表达数据做生存分析</title>
      <link>/post/2020/11/02/%E5%88%A9%E7%94%A8tcga%E7%9A%84mrna%E8%A1%A8%E8%BE%BE%E6%95%B0%E6%8D%AE%E5%81%9A%E7%94%9F%E5%AD%98%E5%88%86%E6%9E%90/</link>
      <pubDate>Mon, 02 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/11/02/%E5%88%A9%E7%94%A8tcga%E7%9A%84mrna%E8%A1%A8%E8%BE%BE%E6%95%B0%E6%8D%AE%E5%81%9A%E7%94%9F%E5%AD%98%E5%88%86%E6%9E%90/</guid>
      <description>数据下载
可以从各大网站寻找方法，本文重点在于得到数据后的分析。这一步之后应到得到的数据有：基因表达数据
这一步需要用程序批量处理整合成表达矩阵，并且注意区分正常样本和病变样本。
clinical临床数据
数据结构如图：
数据整理
这一步我们需要至少从中提取出4个变量提供给下游分析，分别是病例ID，生存状态，以及与生存时间相关的两个变量。具体变量的解释可以查看官方文档。
clinical.data &amp;lt;- read.csv(&amp;#39;../Realdata/clinical.tsv&amp;#39;, sep = &amp;#39;\t&amp;#39;)clinical.data.select &amp;lt;-clinical.data[, c(&amp;#39;case_submitter_id&amp;#39;,&amp;#39;vital_status&amp;#39;,&amp;#39;days_to_death&amp;#39;,&amp;#39;days_to_last_follow_up&amp;#39;)]病例ID用来和表达数据一一对应，并且同时得到目标基因的表达水平，高于均值为高表达，记为1，反之0；
生存状态用判断是否为删失数据，记censored=1，dead=2；
生存时间就是横轴信息；
得到的数据结构如图：
其中case_id应该为TCGA的ID。
生存分析
library(&amp;#39;survival&amp;#39;)library(&amp;#39;survminer&amp;#39;)fit &amp;lt;- survfit(Surv(time, status) ~ expression_level , data = clinical.data.select)ggsurvplot(fit,pval = TRUE, pval.method = TRUE,surv.median.line = &amp;quot;hv&amp;quot;, # Specify median survivalggtheme = theme_bw(), # Change ggplot2 themepalette = c(&amp;quot;#E7B800&amp;quot;, &amp;quot;#2E9FDF&amp;quot;) ,legend.</description>
    </item>
    
    <item>
      <title>小可爱制定的训练计划</title>
      <link>/post/2020/10/28/%E5%B0%8F%E5%8F%AF%E7%88%B1%E5%88%B6%E5%AE%9A%E7%9A%84%E8%AE%AD%E7%BB%83%E8%AE%A1%E5%88%92/</link>
      <pubDate>Wed, 28 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/10/28/%E5%B0%8F%E5%8F%AF%E7%88%B1%E5%88%B6%E5%AE%9A%E7%9A%84%E8%AE%AD%E7%BB%83%E8%AE%A1%E5%88%92/</guid>
      <description>新手折磨计划背部训练热身 跑步机 3~5分钟 身体热起来即可激活 平板支撑 1组60s
俯身“T”“W” 2组一组20
正式动作硬拉
热身空杠 15
自身合适重量 12~15 总共三组 每组间隔休息1分钟
引体向上
有固定器械，膝盖跪在上面，重量插的越大越轻松 12~15 三组，组间休息60S
坐姿划船
如果固定器械被占了可替换杠铃俯身划船或者哑铃俯身划船12-15 三组 组间休息60S
高位下拉
12-15 三组 组间休息60S
绳索下压
12-15 三组 组间休息60S
Additions
反向蝴蝶机 三组 一组12个 组间60S单臂哑铃划船 三组 一组12个 组间60S山羊挺身 三组 一组12个 组间60S记得拉伸PS:目标是肌肥大的话，最好一组12个
胸部训练热身 跑步机 3~5分钟 身体热起来即可</description>
    </item>
    
    <item>
      <title>Ensembl ID 的解释</title>
      <link>/post/2020/10/22/ensembl-id-%E7%9A%84%E8%A7%A3%E9%87%8A/</link>
      <pubDate>Thu, 22 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/10/22/ensembl-id-%E7%9A%84%E8%A7%A3%E9%87%8A/</guid>
      <description>Ensembl ID 的解释：
For example ENSMUSG00000017167.6. From this we can see that it’s an Ensembl ID (ENS), from mouse (MUS), it’s a gene (G) and it’s on its sixth version (.6).
ENSGR 的解释：
The Ensembl ids, by convention, are made of a species index (“ENS” for human and “ENSMUS” for mouse) followed by a feature type indicator (“G” for gene, “T” for transcript, “E” for exon, “P” for translation) and an 11-number figure.</description>
    </item>
    
    <item>
      <title>将excel数据导入R</title>
      <link>/post/2020/10/22/%E5%B0%86excel%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5r/</link>
      <pubDate>Thu, 22 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/10/22/%E5%B0%86excel%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%85%A5r/</guid>
      <description>方法一：
打开excel，将你要导入的数据复制到剪切板(‘clipboard’)输入以下R代码（我惊了！！还能这么操作！）my_data &amp;lt;- read.table(file = &amp;quot;clipboard&amp;quot;, sep = &amp;quot;\t&amp;quot;, header=TRUE)方法二：
安装‘readxl’包输入以下代码（比较常规）：# Loadinglibrary(&amp;quot;readxl&amp;quot;)# xls filesmy_data &amp;lt;- read_excel(&amp;quot;my_file.xls&amp;quot;)# xlsx filesmy_data &amp;lt;- read_excel(&amp;quot;my_file.xlsx&amp;quot;)同时可以指定sheet：
# Specify sheet by its namemy_data &amp;lt;- read_excel(&amp;quot;my_file.xlsx&amp;quot;, sheet = &amp;quot;data&amp;quot;)# Specify sheet by its indexmy_data &amp;lt;- read_excel(&amp;quot;my_file.xlsx&amp;quot;, sheet = 2)方法三：
安装‘xlsx’包输入以下代码：library(&amp;quot;xlsx&amp;quot;)my_data &amp;lt;- read.xlsx(file.choose(), 1) # read first sheet</description>
    </item>
    
    <item>
      <title>差异表达分析的一些记录</title>
      <link>/post/2020/10/21/%E5%B7%AE%E5%BC%82%E8%A1%A8%E8%BE%BE%E5%88%86%E6%9E%90%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Wed, 21 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/10/21/%E5%B7%AE%E5%BC%82%E8%A1%A8%E8%BE%BE%E5%88%86%E6%9E%90%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/</guid>
      <description>今天研究一下DESeq2包：Analyzing RNA-seq data with DESeq2
输入应该为没有归一化过得counts数据，因为DESeq2在软件内部矫正了library的大小；又看了一下limma包，发现这个东西输入也是要求counts数据。</description>
    </item>
    
  </channel>
</rss>
