<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>菜鸟记录 on 冷嘉承</title>
    <link>/categories/%E8%8F%9C%E9%B8%9F%E8%AE%B0%E5%BD%95/</link>
    <description>Recent content in 菜鸟记录 on 冷嘉承</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="/categories/%E8%8F%9C%E9%B8%9F%E8%AE%B0%E5%BD%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>conda enviroment sharing</title>
      <link>/post/2021/06/09/conda-enviroment-sharing/</link>
      <pubDate>Wed, 09 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021/06/09/conda-enviroment-sharing/</guid>
      <description>First, create a .yml file from your source machine.conda env export &amp;gt; environment.ymlCopy it to your target machine.create your environment using .yml file.conda env create -f environment.yml</description>
    </item>
    
    <item>
      <title>Using pytorch to solve optimization problem</title>
      <link>/post/2021/06/08/using-pytorch-to-solve-optimization-problem/</link>
      <pubDate>Tue, 08 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>/post/2021/06/08/using-pytorch-to-solve-optimization-problem/</guid>
      <description>import torchfrom torch.optim import SGD, Adam, ASGD, LBFGSfrom torch.nn import MSELoss# define your torch modelclass yourDeepModel(torch.nn.Module):def __init__(self, args):super(yourDeepModel, self).__init__()self.x = torch.nn.Parameter(torch.rand(x_dims))passdef forward(self):return # initializationmodel = yourDeepModel()optimizer = LBFGS(model.parameters(), lr=.01)epoch = 1000model.train()for i in range(epoch):def closure():optimizer.zero_grad()optim_value = model()optim_value.backward()return optim_valueoptimizer.step(closure)if i % 10 == 0:print(f&amp;quot;optim value:{closure().item()}&amp;quot;)# print your trainable variableprint(f&amp;quot;optim solution:{model.</description>
    </item>
    
    <item>
      <title>胸部训练记录</title>
      <link>/post/2020/11/17/%E8%83%B8%E9%83%A8%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Tue, 17 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/11/17/%E8%83%B8%E9%83%A8%E8%AE%AD%E7%BB%83%E8%AE%B0%E5%BD%95/</guid>
      <description>胸部训练平板卧推 空杆 20kg*20 + 25kg*12 + 30kg*12 +30kg*6+25kg* 6 = 1390kg上斜卧推 25kg*[12 + 10 + (6+4)] = 550kg哑铃夹胸 16kg*12 + 20kg*(2*12 + 10) = 872kg蝴蝶机夹胸 10kg*4*12 = 480kg游泳 12*25m = 300m训练总容量：1390 + 550 + 872 + 480 = 3292kg
</description>
    </item>
    
    <item>
      <title>基础语法加进阶语法</title>
      <link>/post/2020/10/02/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E5%8A%A0%E8%BF%9B%E9%98%B6%E8%AF%AD%E6%B3%95/</link>
      <pubDate>Fri, 02 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/10/02/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%E5%8A%A0%E8%BF%9B%E9%98%B6%E8%AF%AD%E6%B3%95/</guid>
      <description>print(&amp;#39;hello,blogdown!&amp;#39;)开始练习水平线1
水平线2
水平线3
插入冷嘉承的链接。
快速链接或者邮箱链接 
https://jiachengleng.netlify.app or amssljc@163.com
参考格式的链接
冷嘉承的个人主页
利用20%代替链接中的空格
表格
吃的吃的吃的吃的吃的吃的玩的玩的玩的玩的玩的玩的玩的卤煮天坛火锅故宫用Markdown table generator更省事。
if (i in 1:10){print(paste0(&amp;#39;I want&amp;#39;, i, &amp;#39; papers!&amp;#39;))}脚注
发文章太难了吧。1
转至开头
这句话可能对于某些大牛来说是假的↩
</description>
    </item>
    
    <item>
      <title>第二天继续探索</title>
      <link>/post/2020/09/27/%E7%AC%AC%E4%BA%8C%E5%A4%A9%E7%BB%A7%E7%BB%AD%E6%8E%A2%E7%B4%A2/</link>
      <pubDate>Sun, 27 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/2020/09/27/%E7%AC%AC%E4%BA%8C%E5%A4%A9%E7%BB%A7%E7%BB%AD%E6%8E%A2%E7%B4%A2/</guid>
      <description>第二天目标：完成Netlify和github库的链接，实现自动上传本地文件。还未完成:) yeah！12:23
图片咋不能改大小了？可以嗷，基本搞定了，yeah！
仍在继续尝试，用脚本文件试试。。。
成功了？！14:23
我再试一下！？？？14:29
明白了必须render一下才能个更改！14:33，今日目标完成，继续搞我的讨论班PPT了
明天计划学一下blogdown的语法，看看添加一些新的元素</description>
    </item>
    
  </channel>
</rss>
